buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'com.matthewprenger.cursegradle' version '1.0.8'
}

apply plugin: 'net.minecraftforge.gradle.forge'

ext.configFile = file "build.txt"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.mod_version}"
group = "com.pengu.solarfluxreborn"
archivesBaseName = "SolarFluxReborn_${config.minecraft_version}"

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "${config.forge_version}"
    runDir = "run"
    mappings = "snapshot_20170624"
    makeObfSourceJar = false
	replace 'required-after:hammercore', "required-after:hammercore@[${config.hc_version},)"
    replace '@VERSION@', "${config.mod_version}"
}

jar {
    manifest {
        attributes 'FMLCorePlugin': 'com.pengu.solarfluxreborn.core.SFRCore'
        attributes 'FMLCorePluginContainsFMLMod': 'false'
    }
}

repositories {
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }
	maven {
        name = "APengu Maven"
        url = "http://apengu.github.io/PenguLibs"
    }
}

dependencies {
    deobfCompile "cofh:RedstoneFlux:1.12-2.0.1.2:universal"
	deobfCompile "apengu:HammerCore:${config.minecraft_version}-${config.hc_version}:deobf"
	deobfCompile "apengu:BlackHoleStorage:${config.minecraft_version}-${config.bhs_version}:deobf"
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
    manifest {
        attributes 'FMLCorePlugin': 'com.pengu.solarfluxreborn.core.SFRCore'
        attributes 'FMLCorePluginContainsFMLMod': 'false'
    }
}

task srcJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier = 'sources'
	manifest {
        attributes 'FMLCorePlugin': 'com.pengu.solarfluxreborn.core.SFRCore'
        attributes 'FMLCorePluginContainsFMLMod': 'false'
    }
}

artifacts {
    archives deobfJar
	archives srcJar
}

curseforge {
	apiKey = System.env.CURSEFORGE_API_KEY
	project {
		id = "${config.project_id}"
		changelogType = 'html'
		changelog = ""
		releaseType = "${config.release_type}"
		addGameVersion "${config.minecraft_version}"
		mainArtifact(jar) {
		  displayName = "[${config.minecraft_version}] Solar Flux Reborn - ${config.mod_version}"
		}
		addArtifact(deobfJar) {
		  displayName = "[${config.minecraft_version}] Solar Flux Reborn (Deobfuscated) - ${config.mod_version}"
		}
		addArtifact(srcJar) {
		  displayName = "[${config.minecraft_version}] Solar Flux Reborn (Sources) - ${config.mod_version}"
		}
		relations {
            requiredLibrary 'Hammer-Core'
			requiredLibrary 'Redstone-Flux'
            optionalLibrary 'Black-Hole-Storage'
			optionalLibrary 'Draconic-Evolution'
        }
	}
}